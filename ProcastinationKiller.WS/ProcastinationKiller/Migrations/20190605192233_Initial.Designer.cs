// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcastinationKiller.Models;

namespace ProcastinationKiller.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20190605192233_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("ProcastinationKiller.Models.BaseEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("Hidden");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BaseEvent");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseEvent");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completed");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FinishTime");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Regdate");

                    b.Property<DateTime>("TargetDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<DateTime>("Regdate");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.DailyLogin", b =>
                {
                    b.HasBaseType("ProcastinationKiller.Models.BaseEvent");


                    b.ToTable("DailyLogin");

                    b.HasDiscriminator().HasValue("DailyLogin");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.TodoCompletedEvent", b =>
                {
                    b.HasBaseType("ProcastinationKiller.Models.BaseEvent");

                    b.Property<int?>("CompletedItemId");

                    b.HasIndex("CompletedItemId");

                    b.ToTable("TodoCompletedEvent");

                    b.HasDiscriminator().HasValue("TodoCompletedEvent");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.WeeklyLogin", b =>
                {
                    b.HasBaseType("ProcastinationKiller.Models.BaseEvent");


                    b.ToTable("WeeklyLogin");

                    b.HasDiscriminator().HasValue("WeeklyLogin");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.BaseEvent", b =>
                {
                    b.HasOne("ProcastinationKiller.Models.User")
                        .WithMany("Events")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.TodoItem", b =>
                {
                    b.HasOne("ProcastinationKiller.Models.User")
                        .WithMany("UserTodos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProcastinationKiller.Models.TodoCompletedEvent", b =>
                {
                    b.HasOne("ProcastinationKiller.Models.TodoItem", "CompletedItem")
                        .WithMany()
                        .HasForeignKey("CompletedItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
